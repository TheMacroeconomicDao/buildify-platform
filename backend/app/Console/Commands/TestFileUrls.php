<?php

namespace App\Console\Commands;

use App\Models\Order;
use Illuminate\Console\Command;

class TestFileUrls extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'test:file-urls {orderId?}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å URL —Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $orderId = $this->argument('orderId') ?? 3;
        
        $order = Order::with('files')->find($orderId);
        if (!$order) {
            $this->error("‚ùå –ó–∞–∫–∞–∑ —Å ID {$orderId} –Ω–µ –Ω–∞–π–¥–µ–Ω");
            return;
        }

        $this->info("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º URL —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{$orderId}");
        $this->info('');

        $files = $order->files;
        
        if ($files->count() === 0) {
            $this->warn("‚ö†Ô∏è –£ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤");
            return;
        }

        $this->info("üìé –§–∞–π–ª—ã –∏ –∏—Ö URL:");
        
        foreach ($files as $file) {
            $this->info("üìÑ {$file->name}");
            $this->info("   path: {$file->path}");
            $this->info("   url: {$file->url}");
            
            // –ú–æ–¥–µ–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            $baseUrl = 'http://10.0.2.2:8000'; // config.baseUrl –±–µ–∑ /api
            
            if ($file->url && str_starts_with($file->url, '/')) {
                $mobileUrl = $baseUrl . $file->url;
            } else {
                $mobileUrl = $baseUrl . '/storage/' . $file->path;
            }
            
            $this->info("   üì± mobile URL: {$mobileUrl}");
            $this->info('');
        }

        $this->info("‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ URL –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å http://10.0.2.2:8000");
    }
}
