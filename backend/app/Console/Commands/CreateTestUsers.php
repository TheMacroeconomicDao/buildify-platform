<?php

namespace App\Console\Commands;

use App\Enums\Users\Status;
use App\Enums\Users\Type;
use App\Enums\Users\VerificationStatus;
use App\Models\User;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\Hash;

class CreateTestUsers extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'create:test-users';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = '–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∑–∞–∫–∞–∑—á–∏–∫–∞ –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è)';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞
        $customer = User::updateOrCreate([
            'email' => 'customer@test.com'
        ], [
            'name' => '–¢–µ—Å—Ç–æ–≤—ã–π –ó–∞–∫–∞–∑—á–∏–∫',
            'email' => 'customer@test.com',
            'password' => Hash::make('Test123!'),
            'phone' => '+971501234567',
            'type' => Type::Customer->value,
            'status' => Status::Active->value,
            'verification_status' => VerificationStatus::NotRequired->value,
            'email_verified_at' => now(),
            'birth_date' => '1990-01-01',
        ]);

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
        $executor = User::updateOrCreate([
            'email' => 'executor@test.com'
        ], [
            'name' => '–¢–µ—Å—Ç–æ–≤—ã–π –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
            'email' => 'executor@test.com',
            'password' => Hash::make('Test123!'),
            'phone' => '+971507654321',
            'type' => Type::Executor->value,
            'status' => Status::Active->value,
            'verification_status' => VerificationStatus::Approved->value, // –°—Ä–∞–∑—É –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º
            'verified_at' => now(),
            'email_verified_at' => now(),
            'birth_date' => '1985-05-15',
            'about_me' => '–û–ø—ã—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä –ø–æ —Ä–µ–º–æ–Ω—Ç—É –∫–≤–∞—Ä—Ç–∏—Ä. –í—ã–ø–æ–ª–Ω—è—é –≤—Å–µ –≤–∏–¥—ã –æ—Ç–¥–µ–ª–æ—á–Ω—ã—Ö —Ä–∞–±–æ—Ç.',
            'work_experience' => 5,
            'average_rating' => 4.8,
            'reviews_count' => 12,
        ]);

        $this->info('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã:');
        $this->info('');
        $this->info('üìß –ó–ê–ö–ê–ó–ß–ò–ö:');
        $this->info('Email: customer@test.com');
        $this->info('Password: Test123!');
        $this->info('–¢–∏–ø: –ó–∞–∫–∞–∑—á–∏–∫');
        $this->info('');
        $this->info('üî® –ò–°–ü–û–õ–ù–ò–¢–ï–õ–¨:');
        $this->info('Email: executor@test.com');
        $this->info('Password: Test123!');
        $this->info('–¢–∏–ø: –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å (–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω)');
        $this->info('–†–µ–π—Ç–∏–Ω–≥: 4.8 (12 –æ—Ç–∑—ã–≤–æ–≤)');
        $this->info('');
        $this->info('üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –∫–æ–º–∞–Ω–¥–æ–π: php artisan create:test-order');
    }
}
