<?php

namespace App\Console\Commands;

use App\Models\Tariff;
use Illuminate\Console\Command;

class CreateTestSubscription extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'subscription:create-test {--name=Test} {--price=0} {--days=30} {--orders=10} {--contacts=20}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Create a test subscription for $0 to test subscription functionality';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $name = $this->option('name');
        $price = (float) $this->option('price');
        $days = (int) $this->option('days');
        $orders = (int) $this->option('orders');
        $contacts = (int) $this->option('contacts');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º
        $existingTariff = Tariff::where('name', $name)->first();
        
        if ($existingTariff) {
            $this->error("–¢–∞—Ä–∏—Ñ —Å –∏–º–µ–Ω–µ–º '{$name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
            return 1;
        }

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É
        $tariff = Tariff::create([
            'name' => $name,
            'stripe_product_id' => null, // –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –Ω—É–∂–µ–Ω Stripe
            'stripe_price_id' => null,   // –î–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –Ω—É–∂–µ–Ω Stripe
            'duration_days' => $days,
            'max_orders' => $orders,
            'max_contacts' => $contacts,
            'price' => $price,
            'is_active' => true,
            'is_test' => true,
        ]);

        $this->info("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞:");
        $this->table(
            ['–ü–æ–ª–µ', '–ó–Ω–∞—á–µ–Ω–∏–µ'],
            [
                ['ID', $tariff->id],
                ['–ù–∞–∑–≤–∞–Ω–∏–µ', $tariff->name],
                ['–¶–µ–Ω–∞', '$' . number_format($tariff->price, 2)],
                ['–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', $tariff->duration_days . ' –¥–Ω–µ–π'],
                ['–ú–∞–∫—Å. –∑–∞–∫–∞–∑–æ–≤', $tariff->max_orders],
                ['–ú–∞–∫—Å. –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤', $tariff->max_contacts],
                ['–¢–µ—Å—Ç–æ–≤–∞—è', $tariff->is_test ? '–î–∞' : '–ù–µ—Ç'],
                ['–ê–∫—Ç–∏–≤–Ω–∞', $tariff->is_active ? '–î–∞' : '–ù–µ—Ç'],
            ]
        );

        $this->info("üéØ –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç '–∫—É–ø–∏—Ç—å' —ç—Ç—É –ø–æ–¥–ø–∏—Å–∫—É –∑–∞ \$0 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞!");
        
        return 0;
    }
}
